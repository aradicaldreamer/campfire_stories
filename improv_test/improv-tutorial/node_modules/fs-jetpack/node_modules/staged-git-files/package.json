{
  "_args": [
    [
      {
        "raw": "staged-git-files@https://registry.npmjs.org/staged-git-files/-/staged-git-files-0.0.4.tgz",
        "scope": null,
        "escapedName": "staged-git-files",
        "name": "staged-git-files",
        "rawSpec": "https://registry.npmjs.org/staged-git-files/-/staged-git-files-0.0.4.tgz",
        "spec": "https://registry.npmjs.org/staged-git-files/-/staged-git-files-0.0.4.tgz",
        "type": "remote"
      },
      "/Users/mattdeline/Desktop/Dissertation Project/improv-tutorial/node_modules/fs-jetpack"
    ]
  ],
  "_from": "staged-git-files@https://registry.npmjs.org/staged-git-files/-/staged-git-files-0.0.4.tgz",
  "_id": "staged-git-files@0.0.4",
  "_inCache": true,
  "_location": "/fs-jetpack/staged-git-files",
  "_phantomChildren": {},
  "_requested": {
    "raw": "staged-git-files@https://registry.npmjs.org/staged-git-files/-/staged-git-files-0.0.4.tgz",
    "scope": null,
    "escapedName": "staged-git-files",
    "name": "staged-git-files",
    "rawSpec": "https://registry.npmjs.org/staged-git-files/-/staged-git-files-0.0.4.tgz",
    "spec": "https://registry.npmjs.org/staged-git-files/-/staged-git-files-0.0.4.tgz",
    "type": "remote"
  },
  "_requiredBy": [
    "/fs-jetpack",
    "/fs-jetpack/lint-staged"
  ],
  "_resolved": "https://registry.npmjs.org/staged-git-files/-/staged-git-files-0.0.4.tgz",
  "_shasum": "d797e1b551ca7a639dec0237dc6eb4bb9be17d35",
  "_shrinkwrap": null,
  "_spec": "staged-git-files@https://registry.npmjs.org/staged-git-files/-/staged-git-files-0.0.4.tgz",
  "_where": "/Users/mattdeline/Desktop/Dissertation Project/improv-tutorial/node_modules/fs-jetpack",
  "author": {
    "name": "Matthew Chase Whittemore",
    "email": "mcwhittemore@gmail.com"
  },
  "bugs": {
    "url": "https://github.com/mcwhittemore/staged-git-files/issues"
  },
  "dependencies": {},
  "description": "get a list of staged git files and their status",
  "devDependencies": {
    "mocha": "^2.0.1",
    "should": "~2.0.1"
  },
  "directories": {
    "test": "test"
  },
  "homepage": "https://github.com/mcwhittemore/staged-git-files#readme",
  "keywords": [
    "git",
    "pre-commit",
    "post-commit",
    "hooks"
  ],
  "license": "BSD-2-Clause",
  "main": "index.js",
  "name": "staged-git-files",
  "optionalDependencies": {},
  "readme": "# Staged Git Files\n\nThis module returns an array of staged files and their status acording to git.\n\n## Usage\n\n**Download**\n\n`npm install staged-git-files`\n\n**In Code**\n\n```\nvar sgf = require(\"staged-git-files\");\nsgf(function(err, results){\n\t//WHAT EVER YOU SO PLEASE\n});\n```\n\n**Example Results**\n\n```\n[\n\t{\n\t\t\"filename\": \"package.json\",\n\t\t\"status\": \"Added\"\n\t},\n\t{\n\t\t\"filename\": \"readme.md\",\n\t\t\"status\": \"Modified\"\n\t},\n\t{\n\t\t\"filename\": \"index.js\",\n\t\t\"status\": \"Renamed\"\n\t}\n]\n```\n\n## API\n\n### sgf(filter, callback)\n\nGet a list of staged git files\n\n* filter: string of git status codes. No spaces\n* callback:\n\t* err: the error\n\t* results: file object array.\n\n### sgf.getHead(callback)\n\nGet head that will be used in the diff to ID which files are waiting to be staged.\n\n* callback\n\t* err: the error\n\t* head: the git commit id which is aliased to head.\n\n### sgf.readFile(filename, [options], callback)\n\nThis is a proxy for [fs.readFile](http://nodejs.org/api/fs.html#fs_fs_readfile_filename_options_callback) with one change. The filename will be relative to the `sgf.cwd`\n\n### sgf.debug\n\nBoolean that flips logging on and off. By default this is false. If true, all git commands will be console logged.\n\n### sgf.includeContent\n\nIf true, include content will add a `content` or `err` param to the file object.\n\n* Default Value: false\n* Content Param: the content of the file staged\n* Err Param: the error message received while trying to read the file.\n\n### sgf.cwd\n\nThe current working directory. AKA: where the .git folder you care about is.\n\n# Default Value: is equal to process.cwd() of your app.g\n\n## Statuses\n\n**SGF-Status (git status code)**\n\n* Added (A)\n* Copied (C)\n* Deleted (D)\n* Modified (M)\n* Renamed (R)\n* Type-Change (T) [i.e. regular file, symlink, submodule, etc.]\n* Unmerged (U)\n* Unknown (X)\n\n## Change Log\n\n### 0.0.2\n\n* sgf.includeContent added. Now it is possible to also get the file content\n\n### 0.0.1\n\n* The mvp",
  "readmeFilename": "readme.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/mcwhittemore/staged-git-files.git"
  },
  "scripts": {
    "test": "mocha"
  },
  "version": "0.0.4"
}
